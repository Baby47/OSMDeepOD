groups:
  default:
  - crosswalk
  crosswalk-all:
  - crossdis
  - crosswalk
  - theano
  - keras
containers:
  crossdis:
    image: redis:alpine
    run:
      detach: true
      stop-signal: SIGTERM
      interactive: false
      tty: false
      publish:
      - 40001:6379
    exec:
      interactive: true
      tty: true
  crossdis-init: &rref
    image: redis:alpine
    run: &rrefrun
      cmd: /bin/sh -c 'printf "config set requirepass $REDIS_PASS\nauth $REDIS_PASS\n" | redis-cli -h db'
      detach: false
      env:
      - REDIS_PASS=$REDIS_PASS
      interactive: false
      tty: false
      link:
      - crossdis:db
  redisshell: { <<: *rref, run: { <<: *rrefrun, cmd: /bin/sh -c 'redis-cli -h db -a $REDIS_PASS', interactive: true, tty: true } }
  crosswalk: &cref
    build:
      context: crosswalks
      file: Dockerfile
      build-arg:
      - GIT_BRANCH=$GIT_BRANCH
      - GIT_REPO_URL=$GIT_REPO_URL
    image: geometalab/osm-crosswalk-detection
    run: &crefrun
      detach: false
      env:
      - REDIS_PASS=$REDIS_PASS
      - MAPQUEST_API_KEY=$MAPQUEST_API_KEY
      - DISPLAY=unix$DISPLAY
      stop-signal: SIGTERM
      interactive: false
      tty: false
      link:
      - crossdis:db
    exec:
      interactive: true
      tty: true
  crosswalk-stgallen: { <<: *cref, run: { <<: *crefrun, cmd: '--pass $REDIS_PASS manager --mapqapikey $MAPQUEST_API_KEY 8.795611 46.872886 9.674135 47.675419' } }
  crosswalk-bellevue: { <<: *cref, run: { <<: *crefrun, cmd: '--pass $REDIS_PASS manager --mapqapikey $MAPQUEST_API_KEY 8.54279671719532 47.366177501999516 8.547088251618977 47.36781249586627' } }
  cworker: { <<: *cref, run: { <<: *crefrun, detach: true, cmd: --pass $REDIS_PASS jobworker, env: ['REDIS_PASS=$REDIS_PASS'] } }
  cresults: { <<: *cref, run: { <<: *crefrun, detach: true, cmd: --pass $REDIS_PASS resultworker, volume: ['crosswalk-data_output:/output:rw'] } }
  cshell: { <<: *cref, run: { <<: *crefrun, detach: false, entrypoint: /bin/bash, cmd, tty: true, interactive: true, volume: ['/tmp/.X11-unix:/tmp/.X11-unix:rw'] } }
  ctests: { <<: *cref, run: { <<: *crefrun, detach: false, entrypoint: python, cmd: "-m nose --with-xunit --with-coverage --cover-package=src --cover-xml" } }
  keras:
    build:
      context: keras_cuda
      file: Dockerfile
    image: geometalab/keras_cuda
    run:
      detach: false
      stop-signal: SIGTERM
      interactive: true
      tty: true
    exec:
      interactive: true
      tty: true
  theano:
    build:
      context: theano_cuda
      file: Dockerfile
    image: geometalab/theano_cuda
    run:
      detach: false
      stop-signal: SIGTERM
      interactive: true
      tty: true
    exec:
      interactive: true
      tty: true
volumes:
  crosswalk-data_output:
